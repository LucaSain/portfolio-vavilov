"use client";
import { AnimatePresence, motion, RepeatType, Variant } from "framer-motion";
import { useState } from "react";

export default function AnimatedLetters() {
  const [index, setIndex] = useState(0);

  const svgs = [
    {
      viewBox: "0 0 72 72",
      paths: [
        "m58.4549 37.7826c1.768 2.3617 6.5451 6.6821 6.0451 16.2382",
        "m32.5 41.8854s8.4783 6.7823 0 18.7647",
        "m24.809 19.1338-14.559-7.3838 10.9247 12.245",
        "m35.1962 30.8696c.5489 8.3555-9.3225 9.703-11.954 10.3347-.3325.0798-.6318.25-.8736.4919l-2.2227 2.2227c-.3494.3494-.8234.5458-1.3176.5458h-3.5121c-1.203 0-2.2711-.7698-2.6515-1.9111l-.531-1.5931c-.258-.774-.1649-1.6222.2549-2.3218l8.7862-14.6436 4.7238-4.7238-2.1151-6.9054s7.8026-.6987 8.4135 5.3308c0 0 16.9281 2.4418 10.5531 19.383 0 0-1.625 5.9489 2.375 11.1846",
        "m30.9167 14.0208s22.2444-4.0208 19.9583 19.9583",
        "m49.9187 23.155s14.7665 6.5865 5.4563 22.22c0 0-5.375 6.5625.625 13.6042",
      ],
      scale: 1.2,
      translateY: 0,
    },
    {
      viewBox: "0 0 400 400",
      paths: [
        "m217.79 169.05q25.199 0 38.169-8.5231 13.155-8.5231 17.416-20.752 4.4448-12.229 5.7425-40.763 1.2972-31.684 14.082-47.062 12.97-15.564 42.43-15.564v7.0409q-10.561 0.74103-14.452 8.3378-3.705 7.4114-3.705 31.684 0 35.575-7.5966 55.03-7.4111 19.27-30.016 31.313-22.605 12.043-62.071 12.97v58.735q0 21.678 2.4074 28.163 2.5953 6.2997 10.561 10.191 8.1528 3.8911 25.014 3.8911v6.8556h-111.54v-6.8556q16.49-0.18797 24.458-3.5206 8.1526-3.5206 10.747-10.006 2.7772-6.6702 2.7772-28.719v-58.735q-39.836-0.9259-61.885-12.785-22.049-11.858-30.016-30.943-7.7816-19.27-7.7816-55.771 0-23.346-3.5229-30.943-3.5229-7.7821-14.637-8.8938v-7.0408q18.714 0.36974 30.201 5.9292 11.488 5.5585 18.343 19.64 7.0408 14.082 7.9673 37.057 1.2972 28.349 5.3724 40.577 4.2629 12.229 17.602 20.937 13.341 8.5231 38.354 8.5231v-80.784q0-21.678-2.5953-27.978-2.4074-6.485-10.376-10.191-7.9671-3.7055-25.014-3.891v-6.8556h111.54v6.8556q-17.046 0.18798-25.014 3.891-7.9671 3.5208-10.561 10.006-2.4074 6.4851-2.4074 28.163z",
      ],
      scale: 1.2,
      translateY: 200,
    },

    {
      viewBox: "0 0 24 24",
      paths: [
        "m22 16.7399v-12.06996c0-1.2-.98-2.09-2.17-1.99h-.06c-2.1.18-5.29 1.25-7.07 2.37l-.17.11c-.29.18-.77.18-1.06 0l-.25-.15c-1.78-1.11-4.96-2.17-7.06-2.34-1.19-.1-2.16.8-2.16 1.99v12.07996c0 .96.78 1.86 1.74 1.98l.29.04c2.17.29 5.52 1.39 7.44 2.44l.04.02c.27.15.7.15.96 0 1.92-1.06 5.28-2.17 7.46-2.46l.33-.04c.96-.12 1.74-1.02 1.74-1.98z",
        "m12 5.48999v15.00001",
        "m7.75 8.48999h-2.25",
        "m8.5 11.49h-3",
      ],
      scale: 1.3,
      translateY: 0,
    },
    {
      viewBox: "0 0 24 24",
      paths: [
        "m9 15a1 1 0 1 0 1 1 1 1 0 0 0 -1-1zm-7-1a1 1 0 0 0 -1 1v2a1 1 0 0 0 2 0v-2a1 1 0 0 0 -1-1zm20 0a1 1 0 0 0 -1 1v2a1 1 0 0 0 2 0v-2a1 1 0 0 0 -1-1zm-5-7h-4v-1.28a2 2 0 0 0 1-1.72 2 2 0 0 0 -4 0 2 2 0 0 0 1 1.72v1.28h-4a3 3 0 0 0 -3 3v9a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3v-9a3 3 0 0 0 -3-3zm-3.28 2-.5 2h-2.44l-.5-2zm4.28 10a1 1 0 0 1 -1 1h-10a1 1 0 0 1 -1-1v-9a1 1 0 0 1 1-1h1.22l.78 3.24a1 1 0 0 0 1 .76h4a1 1 0 0 0 1-.76l.78-3.24h1.22a1 1 0 0 1 1 1zm-3-4a1 1 0 1 0 1 1 1 1 0 0 0 -1-1z",
      ],
      scale: 1.2,
      translateY: 0,
    },
    {
      viewBox: "0 0 24 24",
      paths: [
        "M8.58737 8.23597L11.1849 3.00376C11.5183 2.33208 12.4817 2.33208 12.8151 3.00376L15.4126 8.23597L21.2215 9.08017C21.9668 9.18848 22.2638 10.0994 21.7243 10.6219L17.5217 14.6918L18.5135 20.4414C18.6409 21.1798 17.8614 21.7428 17.1945 21.3941L12 18.678L6.80547 21.3941C6.1386 21.7428 5.35909 21.1798 5.48645 20.4414L6.47825 14.6918L2.27575 10.6219C1.73617 10.0994 2.03322 9.18848 2.77852 9.08017L8.58737 8.23597Z",
      ],
      scale: 1.3,
      translateY: 100,
    },
  ];

  return (
    <div className="z-[999] h-1/3 w-1/3">
      {svgs.map((svg, i) => (
        <div
          key={i}
          className="h-full w-full absolute top-0 left-0"
          style={{
            transform: `translateY(${svg.translateY}px) scale(${svg.scale})`,
          }}
        >
          <svg
            style={{
              transform: `scale(${svg.scale})`,
            }}
            className="h-full w-full"
            xmlns="http://www.w3.org/2000/svg"
            onClick={() => setIndex(i + 1)}
            viewBox={svg.viewBox}
          >
            <g
              className="h-max w-full"
              style={{
                fill: "none",
                stroke: "#ffffff",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                strokeMiterlimit: 20,
                strokeWidth: i === 1 ? 4 : 1,
              }}
            >
              {svg.paths.map((path, j) => (
                <AnimatePresence key={j}>
                  {index === i && (
                    <motion.path
                      onAnimationComplete={async () => {
                        await delay(500).then(() =>
                          setIndex((i + 1) % svgs.length)
                        );
                      }}
                      d={path}
                      initial="hidden"
                      animate="visible"
                      exit="hidden"
                      variants={variants}
                    />
                  )}
                </AnimatePresence>
              ))}
            </g>
          </svg>
        </div>
      ))}
    </div>
  );
}

const variants = {
  hidden: {
    pathLength: 0,
    opacity: 0,
    transition: { duration: 1.5 },
  },
  visible: {
    pathLength: 1.2,
    opacity: 1,
    transition: {
      duration: 3,
      delay: 1,
    },
  },
};
function delay(time: number) {
  return new Promise((resolve) => setTimeout(resolve, time));
}
